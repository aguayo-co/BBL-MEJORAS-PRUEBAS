# Generated by Django 2.2.10 on 2020-09-14 20:14

from django.db import migrations
import json
import copy


def change_rich_text(apps, __):
    """Search for old wysiwyg and add the new rich_text."""
    ExpositionSection = apps.get_model("expositions", "ExpositionSection")  # pylint: disable=invalid-name
    sections = ExpositionSection.objects.all()
    for section in sections:
        #revisions
        for revision in section.revisions.all():
            # Get old Content
            old_revision = json.loads(revision.content_json)
            old_contents = json.loads(old_revision["content"])
            for index, old_content in enumerate(old_contents):
                if old_content["type"] == "wysiwyg":
                    old_content["type"] = "rich_text"
                    old_value = copy.copy(old_content["value"])
                    old_content["value"] = json.dumps({"show_context_delimiter": True, "wysiwyg": old_value})
                    section.content.stream_data.insert(index, {"type":"rich_text", "value": {"show_context_delimiter": True, "wysiwyg": old_value}, "id":old_content["id"]})
            old_revision["content"] = json.dumps(old_contents)
            revision.content_json = json.dumps(old_revision)
            revision.save()
        section.save()


class Migration(migrations.Migration):

    dependencies = [
        ('expositions', '0025_auto_20200910_0303'),
    ]

    operations = [
        migrations.RunPython(change_rich_text, migrations.RunPython.noop),
    ]
