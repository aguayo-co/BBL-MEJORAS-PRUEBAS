# Generated by Django 2.2.4 on 2019-12-13 23:03
import datetime
import hashlib

import django
from django.db import migrations, models
from django.utils import timezone


def calculate_dynamic_identifier_initial(apps, __):
    """Calculate the Dynamic Identifier for resources."""
    ContentResource = apps.get_model("harvester", "ContentResource")

    resources = []
    for resource in ContentResource.objects.all().iterator():
        identifiers = [
            str(x).strip()
            for x in resource.identifier
            if (x is not None and str(x).strip())
        ]
        if not identifiers:
            resource.delete()
            continue
        resource.dynamic_identifier_cached = hashlib.sha1(
            repr(identifiers).encode("utf-8")
        ).hexdigest()
        resource.dynamic_identifier_expired = False
        resource.dynamic_identifier_expiration = timezone.now() + datetime.timedelta(
            days=90
        )
        resources.append(resource)
        if len(resources) > 1000:
            ContentResource.objects.bulk_update(
                resources,
                [
                    "dynamic_identifier_cached",
                    "dynamic_identifier_expiration",
                    "dynamic_identifier_expired",
                ],
            )
            resources.clear()
    if resources:
        ContentResource.objects.bulk_update(
            resources,
            [
                "dynamic_identifier_cached",
                "dynamic_identifier_expiration",
                "dynamic_identifier_expired",
            ],
        )


def restore_hashed_identifier(apps, __):
    """Recalculate the hashed identifier if migration is reversed."""
    ContentResource = apps.get_model("harvester", "ContentResource")

    resources = []
    for resource in ContentResource.objects.all().iterator():
        resource.hashed_identifier = hashlib.sha1(
            repr(resource.identifier).encode("utf-8")
        ).hexdigest()
        resources.append(resource)
        if len(resources) > 1000:
            ContentResource.objects.bulk_update(
                resources, ["hashed_identifier"],
            )
            resources.clear()
    if resources:
        ContentResource.objects.bulk_update(
            resources, ["hashed_identifier"],
        )


class Migration(migrations.Migration):

    dependencies = [("harvester", "0014_auto_20191219_1227")]

    operations = [
        migrations.CreateModel(
            name="DynamicIdentifierConfig",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                ("field", models.TextField(verbose_name="Campo Dublin Core")),
                (
                    "capture_expression",
                    models.TextField(verbose_name="Expresión de Captura"),
                ),
            ],
            options={
                "verbose_name": "Configuración de Identificador Dinámico",
                "verbose_name_plural": "Configuración de Identificadores Dinámicos",
                "ordering": ["-updated_at"],
                "abstract": False,
            },
        ),
        migrations.RunPython(
            calculate_dynamic_identifier_initial, restore_hashed_identifier
        ),
        migrations.AddConstraint(
            model_name="contentresource",
            constraint=models.UniqueConstraint(
                fields=("dynamic_identifier_cached", "data_source"),
                name="unique_resource_per_datasource",
            ),
        ),
        migrations.AddField(
            model_name="dynamicidentifierconfig",
            name="data_source",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="harvester.DataSource",
                verbose_name="fuente de datos",
            ),
        ),
        migrations.AddIndex(
            model_name="dynamicidentifierconfig",
            index=models.Index(
                fields=["updated_at"], name="harvester_d_updated_3eebe8_idx"
            ),
        ),
        # Next migration is required to allow backwards migration.
        # A default value is needed when creating the column.
        migrations.AlterField(
            model_name="contentresource",
            name="hashed_identifier",
            field=models.CharField(max_length=40, default=""),
        ),
        migrations.RemoveField(model_name="contentresource", name="hashed_identifier"),
        migrations.AlterField(
            model_name="contentresourceequivalence",
            name="equivalence",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="harvester.Equivalence",
                verbose_name="equivalencia",
            ),
        ),
    ]
