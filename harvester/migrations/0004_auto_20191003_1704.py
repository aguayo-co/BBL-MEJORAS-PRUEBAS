# Generated by Django 2.2.4 on 2019-10-03 22:04
from django.db import migrations
from django.db.models import Q


def delete_duplicated_sets(apps, __):
    """Search for duplicated sets and delete all but the earliest set."""
    Set = apps.get_model("harvester", "Set")  # pylint: disable=invalid-name
    sets = Set.objects.all()
    for set_instance in sets:
        last_one = Set.objects.filter(
            spec=set_instance.spec, data_source=set_instance.data_source
        ).earliest("created_at")
        Set.objects.filter(
            spec=set_instance.spec, data_source=set_instance.data_source
        ).exclude(id__exact=last_one.id).delete()


def add_spec_to_empty_sets(apps, __):
    """Search for sets with empty spec and create a new one."""
    Set = apps.get_model("harvester", "Set")  # pylint: disable=invalid-name
    sets = Set.objects.filter(Q(spec__isnull=True) | Q(spec=""))
    for set_instance in sets:
        set_instance.spec = get_spec(set_instance.data_source)
        set_instance.save()


def get_spec(data_source):
    """Return the spec for given data source."""
    return f"set_{data_source.config['format']}_ds_{data_source.id}"


class Migration(migrations.Migration):

    dependencies = [("harvester", "0003_auto_20190828_0727")]

    operations = [
        migrations.RunPython(add_spec_to_empty_sets, migrations.RunPython.noop),
        migrations.RunPython(delete_duplicated_sets, migrations.RunPython.noop),
    ]
